% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_nls_mm.R
\name{predict_nls_mm}
\alias{predict_nls_mm}
\alias{IC_tab}
\title{Average predictions from several (non)linear models based on IC weights}
\usage{
predict_nls_mm(..., criteria = c("AIC", "BIC"), print.table = FALSE)

IC_tab(...)
}
\arguments{
\item{...}{model fit objects fitted to the same data}

\item{criteria}{either \sQuote{AIC} or \sQuote{BIC}}

\item{print.table}{wether to print the table with IC and weights}
}
\value{
numeric vector of the same length as the fitted object.
}
\description{
Computes weights based on AIC or BIC and it generates weighted predictions by
the relative value of the AIC or BIC values

Information criteria table with weights
}
\note{
all the nls or lm objects should be fitted to the same data. The weights are
based on the inverse of the IC value.
}
\examples{
\donttest{
## Example
require(ggplot2)
data(barley, package = "nlraa")

fm.L <- lm(yield ~ NF, data = barley)
fm.Q <- lm(yield ~ NF + I(NF^2), data = barley)
fm.A <- nls(yield ~ SSasymp(NF, Asym, R0, lrc), data = barley)
fm.LP <- nls(yield ~ SSlinp(NF, a, b, xs), data = barley)
fm.BL <- nls(yield ~ SSblin(NF, a, b, xs, c), data = barley)

## Print the table with weights
IC_tab(fm.L, fm.Q, fm.A, fm.LP, fm.BL)

## Each model prediction is weighted by the inverse of their AIC values
prd <- predict_nls_mm(fm.L, fm.Q, fm.A, fm.LP, fm.BL, print.table = TRUE)

ggplot(data = barley, aes(x = NF, y = yield)) + 
  geom_point() + 
  geom_line(aes(y = fitted(fm.L), color = "Linear")) +
  geom_line(aes(y = fitted(fm.Q), color = "Quadratic")) +
  geom_line(aes(y = fitted(fm.A), color = "Asymptotic")) +  
  geom_line(aes(y = fitted(fm.LP), color = "Linear-plateau")) + 
  geom_line(aes(y = fitted(fm.BL), color = "Bi-linear")) + 
  geom_line(aes(y = prd, color = "Avg. Model"), size = 1.2)
}
}
