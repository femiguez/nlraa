% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_nls_mm.R
\name{predict_nls_mm}
\alias{predict_nls_mm}
\alias{IC_tab}
\title{Average predictions from several (non)linear models based on IC weights}
\usage{
predict_nls_mm(
  ...,
  criteria = c("AIC", "AICc", "BIC"),
  interval = c("none", "confidence", "prediction"),
  level = 0.95,
  nsim = 1000,
  newdata = NULL
)

IC_tab(..., criteria = c("AIC", "AICc", "BIC"), sort = TRUE)
}
\arguments{
\item{...}{model fit objects fitted to the same data}

\item{criteria}{either \sQuote{AIC}, \sQuote{AICc} or \sQuote{BIC}.}

\item{interval}{either \sQuote{none}, \sQuote{confidence} or \sQuote{prediction}.}

\item{level}{probability level for the interval}

\item{nsim}{number of simulations to perform for intervals. Default 1000.}

\item{newdata}{new data frame for predictions}

\item{sort}{whether to sort by weights (default to TRUE)}
}
\value{
numeric vector of the same length as the fitted object.
}
\description{
Computes weights based on AIC, AICc, or BIC and it generates weighted predictions by
the relative value of the IC values

Information criteria table with weights
}
\note{
all the nls or lm objects should be fitted to the same data. The weights are
based on the inverse of the IC value.

The delta and weights are calculated based on the \sQuote{criteria}
}
\examples{
\donttest{
## Example
require(ggplot2)
data(barley, package = "nlraa")

fm.L <- lm(yield ~ NF, data = barley)
fm.Q <- lm(yield ~ NF + I(NF^2), data = barley)
fm.A <- nls(yield ~ SSasymp(NF, Asym, R0, lrc), data = barley)
fm.LP <- nls(yield ~ SSlinp(NF, a, b, xs), data = barley)
fm.BL <- nls(yield ~ SSblin(NF, a, b, xs, c), data = barley)

## Print the table with weights
AIC_tab(fm.L, fm.Q, fm.A, fm.LP, fm.BL)

## Each model prediction is weighted by the inverse of their AIC values
prd <- predict_nls_mm(fm.L, fm.Q, fm.A, fm.LP, fm.BL)

ggplot(data = barley, aes(x = NF, y = yield)) + 
  geom_point() + 
  geom_line(aes(y = fitted(fm.L), color = "Linear")) +
  geom_line(aes(y = fitted(fm.Q), color = "Quadratic")) +
  geom_line(aes(y = fitted(fm.A), color = "Asymptotic")) +  
  geom_line(aes(y = fitted(fm.LP), color = "Linear-plateau")) + 
  geom_line(aes(y = fitted(fm.BL), color = "Bi-linear")) + 
  geom_line(aes(y = prd, color = "Avg. Model"), size = 1.2)
}
}
\seealso{
\code{\link{predict}}

\code{\link[bbmle]{ICtab}}
}
