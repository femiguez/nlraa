% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SSquadpq.R
\name{SSquadpq}
\alias{SSquadpq}
\alias{quadpq}
\title{self start for quadratic-plateau-quadratic function (xs)}
\usage{
quadpq(x, a, b, xs, ldxs)

SSquadpq(x, a, b, xs, ldxs)
}
\arguments{
\item{x}{input vector}

\item{a}{the intercept}

\item{b}{the slope}

\item{xs}{break-point}

\item{ldxs}{log of the difference between break-point and second break-point}
}
\value{
a numeric vector of the same length as x containing parameter estimates for equation specified

quadpq: vector of the same length as x using the quadratic-plateau-quadratic function
}
\description{
Self starter for quadratic plateau function with (four) parameters a (intercept), b (slope), xs (break-point), dxs (difference between breakpoint and second break-point)
}
\details{
The equation is, for a response (y) and a predictor (x): \cr
  \eqn{y ~ (x <= xs) * (a + b * x + (-0.5 * b/xs) * x^2) + (x > xs) * (a + (b^2)/(-2 * b/xs))} \cr
  
where the quadratic term is (c) is -0.5*b/xs \cr
and the asymptote is (a + (b^2)/(4 * c)).

This model does not estimate the quadratic parameter \sQuote{c} directly. 
If this is required, the model \sQuote{SSquadp3} should be used instead.
}
\examples{
\donttest{
require(ggplot2)
set.seed(123)
x <- 0:25
y <- quadpq(x, 1, 0.5, 10, 1.5) + rnorm(length(x), 0, 0.3)
dat <- data.frame(x = x, y = y)
fit <- nls(y ~ SSquadpq(x, a, b, xs, dxs), data = dat)
## plot
ggplot(data = dat, aes(x = x, y = y)) + 
  geom_point() + 
  geom_line(aes(y = fitted(fit))) + 
  geom_vline(aes(xintercept = coef(fit)[3]), linetype = 2) +
  geom_vline(aes(xintercept = coef(fit)[3] + exp(coef(fit)[4])), linetype = 3)
     
}
}
